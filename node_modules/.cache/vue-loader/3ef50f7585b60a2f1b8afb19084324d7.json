{"remainingRequest":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenzidong/WebstormProjects/zidongdesign/src/assets/projects/6/Project6.vue?vue&type=template&id=399bf550&scoped=true&","dependencies":[{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/src/assets/projects/6/Project6.vue","mtime":1652168779397},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}