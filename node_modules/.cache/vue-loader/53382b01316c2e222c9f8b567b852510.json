{"remainingRequest":"/Users/chenzidongms/zidongdesign.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenzidongms/zidongdesign.github.io/src/components/Header.vue?vue&type=style&index=0&id=61dd7a3d&scoped=true&lang=css&","dependencies":[{"path":"/Users/chenzidongms/zidongdesign.github.io/src/components/Header.vue","mtime":1699625836292},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/css-loader/dist/cjs.js","mtime":1699625725429},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1699625729381},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/postcss-loader/src/index.js","mtime":1699625727736},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1699625724697},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/vue-loader/lib/index.js","mtime":1699625729381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaGVhZGVyIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIHotaW5kZXg6IDE7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13aGl0ZSk7CiAgICBvdmVyZmxvdzogaGlkZGVuOwp9Cgouc3dpdGNoSW1nIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHdpZHRoOiA2MHZ3OwogICAgaGVpZ2h0OjYwdnc7CiAgICBsZWZ0OiAxMHZ3OwogICAgYm90dG9tOiA0MHZ3OwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsMCUpOwogICAgei1pbmRleDogMTsKICAgIHBvaW50ZXItZXZlbnRzOiBub25lOwp9Ci5oZWFkbGluZSB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBmb250LXNpemU6IDFyZW07CiAgICBsZWZ0OiA1MCU7CiAgICBib3R0b206IDJyZW07CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLDAlKTsKICAgIG1heC13aWR0aDogNDByZW07CiAgICBwYWRkaW5nOiAxcmVtOwogICAgd2lkdGg6IDgwJTsKICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7CiAgICBjb2xvcjogdmFyKC0td2hpdGUpOwogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7Cn0KI2hlYWRlci1jYW52YXMgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwOwogICAgbGVmdDogMDsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgei1pbmRleDogLTE7CiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQpAa2V5ZnJhbWVzIHJvdGF0aW9uIHsKICAgMCV7CiAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsKICAgfQogICAgMTAwJXsKICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogICAgfQp9Ci5jaXJjdWxhciBwYXRoIHsgZmlsbDogbm9uZTt9Ci5jaXJjdWxhciB7CiAgICBhbmltYXRpb246IHJvdGF0aW9uIGluZmluaXRlIDYuNHMgcmV2ZXJzZTsKICAgIHdpZHRoOiA1MHZ3OwogICAgaGVpZ2h0OiA1MHZ3OwogICAgLyptYXJnaW46IDNlbSBhdXRvIDA7Ki8KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAtMjV2dzsKICAgIHRvcDogLTI1dnc7Cn0KLmNpcmN1bGFyIHN2ZyB7IGRpc3BsYXk6IGJsb2NrOyBvdmVyZmxvdzogdmlzaWJsZTsgfQo="},{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"header\">\n        <div class=\"switchImg\">\n            <div class=\"circular\">\n                <img :src=\"require('@/assets/brand/intro_zh.svg')\" alt=\"\" v-if=\"language=='ZH'\">\n                <img :src=\"require('@/assets/brand/intro_en.svg')\" alt=\"\" v-else-if=\"language=='EN'\">\n                <!-- <svg viewBox=\"0 0 100 100\">\n                    <path d=\"M 0,50 a 50,50 0 1,1 0,1 z\" id=\"circle\" />\n                    <text>\n                        <textPath xlink:href=\"#circle\" style=\"font-size: 0.69rem\" v-if=\"language=='ZH'\">一 个 结 合 数 字 媒 体 技 术 打 造 品 牌、产 品 和 体 验 的 创 意 设 计 师</textPath>\n                        <textPath xlink:href=\"#circle\" style=\"font-size: 5.6px\" v-else-if=\"language=='EN'\">A CREATIVE DESIGNER WORKING ON BRANDING, PRODUCT AND EXPERIENCE IN DIGITAL WAY</textPath>\n                    </text>\n                </svg> -->\n            </div>\n        </div>\n        <span class=\"headline\" v-if=\"language=='ZH'\">滚动浏览</span>\n        <span class=\"headline\" v-else-if=\"language=='EN'\">Scroll to view</span>\n        <canvas id=\"header-canvas\"></canvas>\n<!--        <h3 v-if=\"language=='ZH'\" class=\"clickToViewWorks interactive-s\" @click=\"toggle\">查看作品</h3>-->\n<!--        <h3 v-else-if=\"language=='EN'\" class=\"clickToViewWorks interactive-s\" @click=\"toggle\">View My Works</h3>-->\n    </div>\n\n</template>\n\n<script>\n    import {gsap,Power2} from 'gsap'\n    import * as THREE from 'three'\n    import {getRatio} from \"@/utils/utils\";\n    import vertexShader from '../glsl/vertexShader.glsl'\n    import fragmentShader from '../glsl/waveShader.glsl'\n\n    export default {\n        name: \"Header\",\n        data(){\n            return{\n                camera: null,\n                scene: null,\n                renderer: null,\n                canvas:null,\n                geometry:null,\n                clock:null,\n                mesh:null,\n                perspective : 800,\n                loader: new THREE.TextureLoader(),\n                u_time:0,\n\n                sizes: new THREE.Vector2(0,0),\n                offset: new THREE.Vector2(0,0),\n                mouse: new THREE.Vector2(1000,0),\n\n                isFold : true,\n                isFramesNeedUpdate: false,\n                currentIndex:0,\n\n                imagesData:[],\n                preloadImages:[],\n                lazyLoadImages:[],\n                images:[],\n                imagesCount:4,\n\n            }\n        },\n        mounted(){\n            for(let i=0;i<this.imagesCount;i++){\n                this.imagesData.push(require('../assets/brand/img=img'+(i+1)+'.png'));\n            }\n            for(let i=0;i<3;i++){\n                this.preloadImages.push(this.imagesData[i]);\n            }\n\n            this.preload(this.preloadImages,()=>{\n                for(let i=3;i<this.imagesCount;i++){\n                    if(this.images[i+3] == null){\n                        const image = this.loader.load(this.imagesData[i],()=> {\n                            this.images[i] = image;\n                        });\n                    }\n                }\n                this.init();\n            })\n        },\n        components: {\n        },\n        props:['language'],\n        methods:{\n            init(){\n                this.canvas = document.getElementById('header-canvas');\n                this.scene = new THREE.Scene({});\n                //Renderer\n                this.renderer = new THREE.WebGLRenderer({\n                    alpha: true,\n                    canvas: this.canvas\n                });\n                this.renderer.setSize(window.innerWidth,window.innerHeight);\n                this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));\n                this.clock = new THREE.Clock();\n                this.geometry = new THREE.PlaneBufferGeometry(1, 1, 16, 16);\n\n                this.setLights();\n                this.setCamera();\n                this.figure();\n\n                this.switchNextImg();\n                setInterval(this.switchNextImg,6400);\n                window.addEventListener('resize',()=>{\n                    this.onResize();\n                });\n            },\n            setLights() {\n                const ambientlight = new THREE.AmbientLight(0xffffff, 2)\n                this.scene.add(ambientlight)\n            },\n            setCamera(){\n                const fov = (180 * (2 * Math.atan(window.innerHeight / 2 / this.perspective))) / Math.PI;\n                this.camera = new THREE.PerspectiveCamera(fov, window.innerWidth / window.innerHeight, 1, 1000);\n                this.camera.position.set(0, 0, this.perspective);\n                this.camera.updateProjectionMatrix();\n            },\n            figure(){\n                this.getBounds(document.querySelector('.switchImg'));\n                this.createMesh(this.images[this.currentIndex],this.images[this.currentIndex+1]);\n            },\n            getBounds(target){\n                const { width, height, left, top } = target.getBoundingClientRect();\n\n                if (!this.sizes.equals(new THREE.Vector2(width, height))) {\n                    this.sizes.set(width, height)\n                }\n                if (!this.offset.equals(new THREE.Vector2(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2))) {\n                    this.offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n                }\n            },\n            createMesh(image,hoverImage) {\n                const uniforms = {\n                    u_map: { type: 't', value: image },\n                    u_hovermap:{ type: 't', value: hoverImage},\n                    u_alpha:{value:1},\n                    u_ratio:{value: getRatio(this.sizes,image.image)},\n                    u_hoverratio:{value: getRatio(this.sizes,image.image)},\n                    u_time: { value: this.u_time},\n                    u_mouse: { value: this.mouse},\n                    u_res: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n                    u_progressHover:{value:0},\n                    u_progressClick:{value:0},\n                };\n                const material = new THREE.ShaderMaterial({\n                    uniforms: uniforms,\n                    vertexShader: vertexShader,\n                    fragmentShader: fragmentShader,\n                    defines: {\n                        PR: window.devicePixelRatio.toFixed(1)\n                    },\n                });\n                this.mesh = new THREE.Mesh(this.geometry, material);\n                this.mesh.position.set(this.offset.x, this.offset.y, 0);\n                this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n                this.scene.add(this.mesh);\n            },\n            switchNextImg(){\n                if(document.querySelector('.showcase').getBoundingClientRect().y > 0){\n                    this.isFramesNeedUpdate = true;\n                    this.update();\n                    this.mesh.material.uniforms.u_hovermap.value = this.images[this.currentIndex];\n                    gsap.to(this.mesh.material.uniforms.u_progressHover,{\n                        duration:1.6,\n                        value:1,\n                        ease:Power2.easeInOut,\n                        onComplete:()=>{\n                            if(this.currentIndex < this.images.length - 1){\n                                this.currentIndex +=1;\n                            }else{\n                                this.currentIndex =0;\n                            }\n                            this.mesh.material.uniforms.u_map.value = this.images[this.currentIndex];\n                            gsap.to(this.mesh.material.uniforms.u_progressHover,{\n                                duration:1.6,\n                                value:0,\n                                ease:Power2.easeInOut,\n                                onComplete:()=>{\n                                    setTimeout(()=>{\n                                        this.isFramesNeedUpdate = false\n                                    },10);\n                                }\n                            })\n                        }\n                    });\n                }\n            },\n            update(){\n                if(this.isFramesNeedUpdate){\n                    requestAnimationFrame(this.update);\n                    this.renderer.render(this.scene,this.camera);\n                    if(this.mesh){\n                        if(this.mesh.material.uniforms.u_time.value>10000){\n                            this.mesh.material.uniforms.u_time.value = 0;\n                        }\n                        this.mesh.material.uniforms.u_time.value += 0.03;\n                    }\n                }\n            },\n            preload(imgs, allImagesLoadedCallback) {\n                let loadedCounter = 0;\n                const toBeLoadedNumber = imgs.length;\n                const preloadImage = (t, anImageLoadedCallback) => {\n                    const image = this.loader.load(t, anImageLoadedCallback);\n                    this.images.push(image);\n                };\n                imgs.forEach((img) => {\n                    preloadImage(img, () => {\n                        loadedCounter += 1;\n                        this.loadingPercent = loadedCounter / toBeLoadedNumber * 100;\n                        this.$emit('updateLoadingPercent',this.loadingPercent);\n                        if (loadedCounter === toBeLoadedNumber) {\n                            allImagesLoadedCallback()\n                        }\n                    })\n                })\n            },\n            onResize() {\n                this.setCamera();\n                this.renderer.setSize(window.innerWidth,window.innerHeight);\n                this.getBounds(document.querySelector('.switchImg'));\n                this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n                this.mesh.position.set(this.offset.x, this.offset.y, 0);\n                this.mesh.material.uniforms.u_res.value.set(window.innerWidth, window.innerHeight);\n                this.mesh.material.uniforms.u_ratio.value = getRatio(this.sizes,this.images[this.currentIndex].image);\n                this.mesh.material.uniforms.u_hoverratio.value = getRatio(this.sizes,this.images[this.currentIndex].image);\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    .header {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        z-index: 1;\n        background-color: var(--white);\n        overflow: hidden;\n    }\n\n    .switchImg {\n        position: absolute;\n        width: 60vw;\n        height:60vw;\n        left: 10vw;\n        bottom: 40vw;\n        transform: translate(0%,0%);\n        z-index: 1;\n        pointer-events: none;\n    }\n    .headline {\n        position: absolute;\n        font-size: 1rem;\n        left: 50%;\n        bottom: 2rem;\n        transform: translate(-50%,0%);\n        max-width: 40rem;\n        padding: 1rem;\n        width: 80%;\n        box-sizing: content-box;\n        text-align: center;\n        mix-blend-mode: difference;\n        color: var(--white);\n        pointer-events: none;\n    }\n    #header-canvas {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n        pointer-events: none;\n    }\n    @keyframes rotation {\n       0%{\n           transform: rotate(0deg);\n       }\n        100%{\n            transform: rotate(360deg);\n        }\n    }\n    .circular path { fill: none;}\n    .circular {\n        animation: rotation infinite 6.4s reverse;\n        width: 50vw;\n        height: 50vw;\n        /*margin: 3em auto 0;*/\n        position: absolute;\n        right: -25vw;\n        top: -25vw;\n    }\n    .circular svg { display: block; overflow: visible; }\n</style>"]}]}