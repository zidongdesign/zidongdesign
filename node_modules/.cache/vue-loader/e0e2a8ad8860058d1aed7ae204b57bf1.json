{"remainingRequest":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenzidong/WebstormProjects/zidongdesign/src/components/Showcase.vue?vue&type=style&index=0&id=254d16ba&scoped=true&lang=css&","dependencies":[{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/src/components/Showcase.vue","mtime":1648702599395},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenzidong/WebstormProjects/zidongdesign/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2hvd2Nhc2UgewogICAgd2lkdGg6IDEwMHZ3OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7CiAgICB6LWluZGV4OiAxOwp9Ci5zaG93Y2FzZS13cmFwcGVyewogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgei1pbmRleDogMTsKICAgIHdpZHRoOiAxMDB2dzsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTsgLyogRmlyZWZveCAqLwogICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAvKiBJRSAxMCsgKi8KfQouc2hvd2Nhc2Utd3JhcHBlcjo6LXdlYmtpdC1zY3JvbGxiYXJ7CiAgICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUgU2FmYXJpICovCn0KLnNob3djYXNlLWNvbnRhaW5lciB7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICB6LWluZGV4OiAxOwogICAgd2lkdGg6IDEwMHZ3OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZy1ib3R0b206IGNhbGMoMTAwdmggLSA0OHJlbSk7Cn0KCi5zaG93Y2FzZS1maWd1cmV7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAxMDB2dzsKICAgIGhlaWdodDogMTAwdmg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cgp9Ci5zaG93Y2FzZS1pbWFnZSB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAyNHJlbTsKICAgIGhlaWdodDogMjRyZW07CiAgICBvYmplY3QtZml0OiBjb3ZlcjsKICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyOwogICAgbGVmdDogY2FsYyg1MCUgLSAxMnJlbSk7CiAgICB0b3A6IGNhbGMoNTAlIC0gMTJyZW0pOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci50aXRsZS1jb250ZW50IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbGVmdDogNTAlOwogICAgdG9wOiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgY29sb3I6ICNmZmY7CiAgICBvcGFjaXR5OiAxOwogICAgZm9udC1zaXplOiAycmVtOwogICAgLyp6LWluZGV4OiAtMTsqLwogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOwp9Ci50aXRsZS1jb250ZW50IGgxewogICAgZm9udC1zaXplOiAycmVtOwogICAgbWFyZ2luLWJvdHRvbTogMC41cmVtOwp9Ci50aXRsZS1jb250ZW50IGgyewogICAgZm9udC1zaXplOiAxcmVtOwp9Cgojc2hvd2Nhc2UtY2FudmFzewogICAgcG9zaXRpb246IGZpeGVkOwogICAgdG9wOiAwOwogICAgbGVmdDogMDsKICAgIHdpZHRoOiAxMDB2dzsKICAgIGhlaWdodDogMTAwdmg7CiAgICB6LWluZGV4OiAwOwogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7Cn0K"},{"version":3,"sources":["Showcase.vue"],"names":[],"mappingsoiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Showcase.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"showcase\">\n<!--        <ScrollBar :scroll-y=\"scrollY\" ref=\"scrollbar\"></ScrollBar>-->\n        <div class=\"showcase-wrapper\" @scroll=\"onShowcaseWrapperScroll\">\n            <div class=\"showcase-container\" id=\"showcase-container\" @touchmove=\"onShowcaseContainerTouchMove\">\n                <div class=\"showcase-figure\" v-for=\"item in projects\" :key = \"item.id\">\n                    <div\n                            :data-src=\"item.dataSrc\"\n                            :data-hover=\"item.dataHover\"\n                            class=\"showcase-image interactive-l\"\n                            alt=\"My image\"\n                            @mouseover=\"onShowcaseImageMouseOver\"\n                            @mouseout=\"onShowcaseImageMouseOut\"\n                            @click=\"openDetailPage\"\n                    >\n                    </div>\n                    <div class=\"title-content\">\n                        <h1 v-if=\"language == 'ZH'\">{{item.title.ZH}}</h1>\n                        <h1 v-else-if=\"language == 'EN'\">{{item.title.EN}}</h1>\n                        <h2 v-if=\"language == 'ZH'\">{{item.category.ZH}}</h2>\n                        <h2 v-if=\"language == 'EN'\">{{item.category.EN}}</h2>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <canvas id=\"showcase-canvas\"></canvas>\n    </div>\n</template>\n\n<script>\n    import * as THREE from 'three'\n    import {gsap,Power2} from 'gsap'\n    import vertexShader from '../glsl/vertexShader.glsl'\n    import fragmentShader from '../glsl/trippyShader.glsl'\n    import {getRatio,map} from '@/utils/utils'\n    // import ScrollBar from '@/components/ScrollBar'\n    import {ScrollTrigger} from \"gsap/ScrollTrigger\"\n    import { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\n\n    gsap.registerPlugin(ScrollTrigger,ScrollToPlugin);\n\n\n    export default {\n        name: \"Showcase\",\n        data() {\n            return {\n                camera: null,\n                scene: null,\n                renderer: null,\n                canvas:null,\n                geometry:null,\n                clock:null,\n                meshes:[],\n                images:[],\n                perspective : 800,\n                loader: new THREE.TextureLoader(),\n                u_time:0,\n\n                u_offset:new THREE.Vector2(0,0),\n                sizes: new THREE.Vector2(0,0),\n                offset: new THREE.Vector2(0,0),\n                mouse: new THREE.Vector2(0,0),\n                delta: new THREE.Vector2(0,0),\n\n                isHovering:false,\n                isOpenDetailPage:false,\n                isWheeling:false,\n                isFramesNeedUpdate:false,\n                isChangingFilter:false,\n\n                hoveringTargetIndex:0,\n                clickTargetIndex:0,\n                openProjectId:0,\n                inViewportTargetIndex:0,\n                filterIndex:0,\n\n                loadingPercent:0,\n\n                scrollbar: null,\n                scrollY :0,\n\n                projectCount:this.ProjectData.data().projectData.length,\n            }\n        },\n        components:{\n        },\n        mounted(){\n            for (let i=0;i< this.projects.length;i++){\n                this.getBounds(document.querySelector('.showcase-image'));\n                gsap.to(document.querySelectorAll('.title-content')[i],{\n                    // x: this.offset.x -this.delta.x,\n                    // y: this.offset.y + this.delta.y,\n                    x:-this.delta.x,\n                    y:this.delta.y,\n                    ease:Power2.easeOut\n                });\n            }\n            this.preload(this.originalProjectData,()=> {\n                setTimeout(()=> {\n                    this.init();\n                },800);\n            });\n        },\n        computed:{\n            isMobile: function () {\n                return window.matchMedia('(max-width: 767px)').matches\n            },\n            originalProjectData: function () {\n                return this.ProjectData.data().projectData.reverse().filter(function (item) {\n                    return item.isShowcases;\n                });\n            }\n        },\n        props:[\n            'language',\n            'projects'\n        ],\n        methods:{\n            /*Action\n            --------------------------------*/\n            init(){\n                this.canvas = document.getElementById('showcase-canvas');\n                this.scene = new THREE.Scene({});\n                //Renderer\n                this.renderer = new THREE.WebGLRenderer({\n                    alpha: true,\n                    canvas: this.canvas\n                });\n                this.renderer.setSize(window.innerWidth,window.innerHeight);\n                this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));\n                this.clock = new THREE.Clock();\n                this.geometry = new THREE.PlaneBufferGeometry(1, 1, 16, 16);\n\n                this.setLights();\n                this.setCamera();\n\n                this.figure();\n                this.update();\n\n                this.bindListener();\n                this.$emit('loadingCoverHided');\n            },\n            setLights(){\n                const ambientlight = new THREE.AmbientLight(0xffffff, 2)\n                this.scene.add(ambientlight)\n            },\n            setCamera(){\n                const fov = (180 * (2 * Math.atan(window.innerHeight / 2 / this.perspective))) / Math.PI;\n                this.camera = new THREE.PerspectiveCamera(fov, window.innerWidth / window.innerHeight, 1, 1000);\n                this.camera.position.set(0, 0, this.perspective);\n                this.camera.updateProjectionMatrix();\n            },\n            figure(){\n                for (let i=0;i< this.projects.length;i++){\n                    this.getBounds(document.querySelector('.showcase-image'));\n                    let j = this.projects[i].id -1;\n                    let reverseImages = [...this.images].reverse();\n                    this.createMesh(reverseImages[j]);\n                }\n            },\n            getBounds(target){\n                const { width, height, left, top } = target.getBoundingClientRect();\n                if (!this.sizes.equals(new THREE.Vector2(width, height))) {\n                    this.sizes.set(width, height)\n                }\n                if (!this.offset.equals(new THREE.Vector2(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2))) {\n                    this.offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n                }\n            },\n            createMesh(image) {\n                const uniforms = {\n                    u_map: { type: 't', value: image },\n                    u_alpha:{value:1},\n                    u_ratio:{value: getRatio(this.sizes,image.image)},\n                    u_hoverratio:{value: getRatio(this.sizes,image.image)},\n                    u_mouse: { value: this.mouse},\n                    u_time: { value: this.u_time},\n                    u_res: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n                    u_offset:{value: this.u_offset},\n                    u_progressHover:{value:0},\n                    u_progressClick:{value:0},\n                };\n                const material = new THREE.ShaderMaterial({\n                    uniforms: uniforms,\n                    vertexShader: vertexShader,\n                    fragmentShader: fragmentShader,\n                    defines: {\n                        PR: window.devicePixelRatio.toFixed(1)\n                    },\n\n                });\n                const mesh = new THREE.Mesh(this.geometry, material);\n                mesh.position.set(this.offset.x, this.offset.y, 0);\n                mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n                this.meshes.push(mesh);\n                this.scene.add(mesh);\n            },\n            openDetailPage(e){\n                if(!this.isOpenDetailPage){\n                    document.querySelector('.detail-wrapper').style.display = 'block';\n                    document.querySelector('.detail-wrapper').style.scrollTop = 0;\n                    this.isOpenDetailPage = true;\n                    this.clickTargetIndex = Array.from(e.target.parentElement.parentElement.children).indexOf(e.target.parentElement);\n                    this.openProjectId = this.projects[this.clickTargetIndex].id;\n                    this.hideTitle();\n                    const newBound = {\n                        x:window.innerWidth * 1.05,\n                        y:window.innerHeight * 1.05\n                    };\n                    const newRatio = getRatio(newBound,this.images[this.clickTargetIndex].image);\n                    gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_hoverratio.value,0.8,{\n                        x:newRatio.x,\n                        y:newRatio.y,\n                        ease:Power2.easeInOut\n                    });\n                    gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_ratio.value,0.8,{\n                        x:newRatio.x,\n                        y:newRatio.y,\n                        ease:Power2.easeInOut\n                    });\n                    gsap.to('#app',{\n                        scrollTo:document.querySelectorAll('.showcase-figure')[this.clickTargetIndex],\n                        duration:0.4,\n                        ease:Power2.easeInOut,\n                        onComplete:()=>{\n                            gsap.to('.showcase-filter',{\n                                yPercent:0,\n                                duration:0.2,\n                            })\n                            document.querySelector('.showcase').classList.remove('show');\n                        }\n                    });\n                    gsap.to(document.querySelectorAll('.showcase-image')[this.clickTargetIndex],{\n                        width:window.innerWidth,\n                        height:window.innerHeight,\n                        left:0,\n                        top:0,\n                        duration:0,\n                        onComplete:()=>{\n                            this.getBounds(document.querySelectorAll('.showcase-image')[this.clickTargetIndex]);\n                            gsap.to(this.meshes[this.clickTargetIndex].scale,{\n                                x:this.sizes.x,\n                                y:this.sizes.y,\n                                duration:0.8,\n                                ease:Power2.easeInOut,\n                                onComplete:()=>{\n                                    gsap.to(('.detail-wrapper'),{\n                                        opacity: 1,\n                                        scrollTo:0,\n                                    });\n                                    document.querySelector('.percent').style.opacity = 1;\n                                    this.$emit('openDetailPage',this.openProjectId);\n                                    gsap.to('.back-button',{\n                                        xPercent:0,\n                                        duration:0.4,\n                                        ease:Power2.easeInOut,\n                                    });\n                                }\n                            });\n                            gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_res.value,{\n                                x:window.innerWidth,\n                                y:window.innerHeight,\n                                duration:0.8,\n                            });\n\n                        }\n                    });\n                    gsap.to(this.u_offset, 0.8, {\n                        x: 0,\n                        y: 0\n                    });\n                }\n            },\n            closeDetailPage(){\n                this.showTitle();\n                const newBound = {\n                    x: parseFloat(window.getComputedStyle(document. documentElement)[\"fontSize\"])*24,\n                    y:parseFloat(window.getComputedStyle(document. documentElement)[\"fontSize\"])*24,\n                };\n                const newRatio = getRatio(newBound,this.images[this.clickTargetIndex].image);\n                gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_hoverratio.value,0.8,{\n                    x:newRatio.x,\n                    y:newRatio.y,\n                    ease:Power2.easeInOut\n                });\n                gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_ratio.value,0.8,{\n                    x:newRatio.x,\n                    y:newRatio.y,\n                    ease:Power2.easeInOut\n                });\n                gsap.to(document.querySelectorAll('.showcase-image')[this.clickTargetIndex],{\n                    duration:0.8,\n                    width:'24rem',\n                    height:'24rem',\n                    left:'calc(50% - 12rem)',\n                    top:'calc(50% - 12rem)',\n                    ease:Power2.easeInOut,\n                    onUpdate:()=>{\n                        this.getBounds(document.querySelectorAll('.showcase-image')[this.clickTargetIndex]);\n                        this.meshes[this.clickTargetIndex].scale.set(this.sizes.x, this.sizes.y, 1);\n                        this.meshes[this.clickTargetIndex].material.uniforms.u_res.value.set(window.innerWidth, window.innerHeight);\n                    },\n                    onComplete:()=>{\n                        gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_progressClick,{\n                            duration:0.8,\n                            value: 0,\n                            ease:Power2.easeInOut\n                        });\n                        gsap.to(this.meshes[this.hoveringTargetIndex].material.uniforms.u_progressHover,{\n                            duration:0.5,\n                            value: 0\n                        });\n                        this.isHovering = false;\n                        this.isOpenDetailPage = false;\n                        gsap.to('.showcase-filter',{\n                            yPercent:-100,\n                            duration:0.2\n                        });\n                        document.querySelector('.showcase').classList.add('show');\n                    },\n                });\n            },\n            showTitle(){\n                gsap.fromTo(document.querySelectorAll('.title-content')[this.clickTargetIndex],{\n                    opacity:0,\n                },{\n                    duration:0.8,\n                    opacity:1,\n                    ease:Power2.easeInOut,\n                });\n            },\n            hideTitle(){\n                gsap.fromTo(document.querySelectorAll('.title-content')[this.clickTargetIndex],{\n                    opacity:1,\n                },{\n                    duration:0.8,\n                    opacity:0,\n                    ease:Power2.easeInOut,\n                });\n            },\n            changeFilter(e){\n                setTimeout(()=> {\n                    this.isChangingFilter = true;\n                    this.filterIndex = e;\n                    for (let i = 0; i <this.meshes.length ; i++) {\n                        this.scene.remove(this.meshes[i]);\n                    }\n                    this.meshes = [];\n                    this.figure();\n                    this.isChangingFilter = false;\n                    gsap.fromTo('.showcase-wrapper',{\n                        y:20,\n                        opacity:0,\n                    },{\n                        opacity:1,\n                        y:0,\n                        duration:0.4,\n                        delay:0.1,\n                    });\n                    gsap.to('#showcase-canvas',{\n                        opacity:1,\n                        duration:0.4,\n                        delay:0.1\n                    });\n                },100);\n            },\n            update(){\n                requestAnimationFrame(this.update);\n                this.renderer.render(this.scene,this.camera);\n                if(this.isHovering) {\n                    this.meshes[this.hoveringTargetIndex].material.uniforms.u_time.value += 0.03;\n                }\n                if(!this.isChangingFilter){\n                    if(!this.isOpenDetailPage ){\n                        for (let i=0;i< this.projects.length;i++){\n                            if(!(this.meshes[i].position.x === this.offset.x + this.delta.x\n                                && this.meshes[i].position.y === this.offset.y + this.delta.y)\n                            ){\n                                this.getBounds(document.querySelectorAll('.showcase-image')[i]);\n                                gsap.to(this.meshes[i].position,{\n                                    x:this.offset.x + this.delta.x,\n                                    y:this.offset.y + this.delta.y,\n                                    duration:0.2,\n                                });\n                                gsap.to(document.querySelectorAll('.title-content')[i],0.4,{\n                                    x:-this.delta.x,\n                                    y:this.delta.y,\n                                    ease:Power2.easeOut\n                                });\n                            }\n\n                        }\n                    }\n                    else {\n                        for (let i=0;i< this.projects.length;i++){\n                            if(!(this.meshes[i].position.x === this.offset.x + this.delta.x\n                                &&this.meshes[i].position.y === this.offset.y + this.delta.y)\n                            ){\n                                this.getBounds(document.querySelectorAll('.showcase-image')[i]);\n                                gsap.to(this.meshes[i].position,{\n                                    x:this.offset.x,\n                                    y:this.offset.y\n                                });\n                            }\n                        }\n                    }\n                }\n            },\n            preload(projects, allImagesLoadedCallback) {\n\n                let loadedCounter = 0;\n                const toBeLoadedNumber = projects.length;\n                const preloadImage = (t, anImageLoadedCallback) => {\n                    const image = this.loader.load(t, anImageLoadedCallback);\n                    this.images.push(image);\n                };\n                projects.forEach((project) => {\n                    preloadImage(project.dataSrc, () => {\n                        loadedCounter += 1;\n                        this.loadingPercent = loadedCounter / toBeLoadedNumber * 100;\n                        this.$emit('updateLoadingPercent',this.loadingPercent);\n                        if (loadedCounter === toBeLoadedNumber) {\n                            allImagesLoadedCallback()\n                        }\n                    })\n                })\n            },\n            /*Event\n            --------------------------------*/\n            bindListener(){\n                window.addEventListener('mousemove', (ev) => {\n                    this.onMouseMove(ev);\n                });\n                window.addEventListener('resize',()=>{\n                    this.onResize();\n                });\n                document.querySelector('#app').addEventListener('scroll',(s)=>{\n                    this.onScroll(s);\n                });\n            },\n            onResize() {\n                this.setCamera();\n                this.renderer.setSize(window.innerWidth,window.innerHeight);\n                for(let i=0;i< this.projects.length;i++){\n                    this.getBounds(document.querySelectorAll('.showcase-image')[i]);\n                    this.meshes[i].scale.set(this.sizes.x, this.sizes.y, 1);\n                    this.meshes[i].material.uniforms.u_res.value.set(window.innerWidth, window.innerHeight);\n                    this.meshes[i].material.uniforms.u_ratio.value = getRatio(this.sizes,this.images[i].image);\n                    this.meshes[i].material.uniforms.u_hoverratio.value = getRatio(this.sizes,this.images[i].image);\n                }\n            },\n            onMouseMove(event) {\n                if(this.isMobile) return;\n                const tX = event.clientX;\n                const tY = event.clientY;\n                gsap.to(this.mouse, 0.8, {\n                    x: tX,\n                    y: tY,\n                    onUpdate: () =>{\n                        if(!this.isOpenDetailPage){\n                            this.u_offset.x = (tX - this.mouse.x) * 0.0001;\n                            this.u_offset.y = -(tY - this.mouse.y)  * 0.0001;\n                            this.delta.x = map(this.mouse.x,0,window.innerWidth,-1,1) * 16;\n                            this.delta.y = map(this.mouse.y,0,window.innerHeight,1,-1) * 16;\n                        }\n                    },\n                });\n            },\n            onScroll(){\n                this.scrollY = document.querySelector('.showcase').getBoundingClientRect().top;\n                if(!this.isMobile) return;\n                gsap.to(this.mouse, 0.8, {\n                    y: this.scrollY,\n                    onUpdate: () =>{\n                        if(!this.isOpenDetailPage){\n                            this.u_offset.y = (this.mouse.y - this.scrollY)  * 0.0004;\n                            this.delta.y = (this.mouse.y - this.scrollY) * 0.2;\n                        }\n                    },\n                });\n                if(document.querySelector('.showcase').getBoundingClientRect().top < window.innerHeight - 100 &&\n                    document.querySelector('.showcase').getBoundingClientRect().height + document.querySelector('.showcase').getBoundingClientRect().top > window.innerHeight - 100\n                ){\n                    if(document.querySelector('.showcase').classList.contains('show')) return;\n                    document.querySelector('.showcase').classList.add('show');\n                    gsap.to('.showcase-filter',{\n                        yPercent:-100,\n                        duration:0.2,\n                    })\n                }\n                if(document.querySelector('.showcase').getBoundingClientRect().top > window.innerHeight - 100){\n                    if(!document.querySelector('.showcase').classList.contains('show')) return;\n                    document.querySelector('.showcase').classList.remove('show');\n                    gsap.to('.showcase-filter',{\n                        yPercent:0,\n                        duration:0.2,\n                    })\n                }\n                if(document.querySelector('.showcase').getBoundingClientRect().height + document.querySelector('.showcase').getBoundingClientRect().top < window.innerHeight - 100){\n                    if(!document.querySelector('.showcase').classList.contains('show')) return;\n                    document.querySelector('.showcase').classList.remove('show');\n                    gsap.to('.showcase-filter',{\n                        yPercent:0,\n                        duration:0.2,\n                    })\n                }\n            },\n            onShowcaseImageMouseOver(e){\n                this.isHovering = true;\n                this.hoveringTargetIndex = Array.from(e.target.parentElement.parentElement.children).indexOf(e.target.parentElement);\n                gsap.to(this.meshes[this.hoveringTargetIndex].material.uniforms.u_progressHover,{\n                    duration:0.5,\n                    value: 1\n                });\n            },\n            onShowcaseImageMouseOut(){\n                if(this.isOpenDetailPage){\n                    return\n                }\n                this.isHovering = false;\n                gsap.to(this.meshes[this.hoveringTargetIndex].material.uniforms.u_progressHover,{\n                    duration:0.5,\n                    value: 0\n                });\n            },\n            onShowcaseContainerTouchMove(e){\n                if(this.isOpenDetailPage){\n                    e.preventDefault();\n                }else{\n                    return true;\n                }\n            },\n            onShowcaseWrapperScroll(s){\n                this.onScroll(s.target.scrollTop,s.target.children[0].clientHeight - s.target.children[0].children[0].clientHeight);\n            },\n            detailImagesLoaded(){\n                gsap.to(this.meshes[this.clickTargetIndex].material.uniforms.u_progressClick,{\n                    duration:0.8,\n                    value: 1,\n                    ease:Power2.easeInOut,\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .showcase {\n        width: 100vw;\n        position: relative;\n        background-color: var(--background-color);\n        z-index: 1;\n    }\n    .showcase-wrapper{\n        align-items: center;\n        justify-content: center;\n        z-index: 1;\n        width: 100vw;\n        position: relative;\n        scrollbar-width: none; /* Firefox */\n        -ms-overflow-style: none; /* IE 10+ */\n    }\n    .showcase-wrapper::-webkit-scrollbar{\n        display: none; /* Chrome Safari */\n    }\n    .showcase-container {\n        align-items: center;\n        justify-content: center;\n        z-index: 1;\n        width: 100vw;\n        position: relative;\n        padding-bottom: calc(100vh - 48rem);\n    }\n\n    .showcase-figure{\n        display: block;\n        width: 100vw;\n        height: 100vh;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n\n    }\n    .showcase-image {\n        display: block;\n        width: 24rem;\n        height: 24rem;\n        object-fit: cover;\n        object-position: center;\n        left: calc(50% - 12rem);\n        top: calc(50% - 12rem);\n        position: relative;\n    }\n    .title-content {\n        display: block;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%,-50%);\n        position: absolute;\n        color: #fff;\n        opacity: 1;\n        font-size: 2rem;\n        /*z-index: -1;*/\n        pointer-events: none;\n        text-align: center;\n        will-change: transform;\n    }\n    .title-content h1{\n        font-size: 2rem;\n        margin-bottom: 0.5rem;\n    }\n    .title-content h2{\n        font-size: 1rem;\n    }\n\n    #showcase-canvas{\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        z-index: 0;\n        pointer-events: none;\n    }\n</style>"]}]}