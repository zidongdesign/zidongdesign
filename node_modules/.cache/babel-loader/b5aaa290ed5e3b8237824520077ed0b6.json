{"remainingRequest":"/Users/chenzidongms/zidongdesign.github.io/node_modules/thread-loader/dist/cjs.js!/Users/chenzidongms/zidongdesign.github.io/node_modules/babel-loader/lib/index.js!/Users/chenzidongms/zidongdesign.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenzidongms/zidongdesign.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenzidongms/zidongdesign.github.io/src/components/MyCursor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenzidongms/zidongdesign.github.io/src/components/MyCursor.vue","mtime":1699625730283},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1699625724697},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/thread-loader/dist/cjs.js","mtime":1699625729078},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/babel-loader/lib/index.js","mtime":1699625724594},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1699625724697},{"path":"/Users/chenzidongms/zidongdesign.github.io/node_modules/vue-loader/lib/index.js","mtime":1699625729381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MyCursor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"cursor-mask\">\n    </div>\n</template>\n\n<script>\n    import P5 from 'p5';\n    import {gsap} from 'gsap'\n\n    export default {\n        name: \"MyCursor\",\n        data(){\n            return{\n                isHover : false,\n                isLargeTarget : false,\n                hoveringObject: null,\n                p5:null,\n            }\n        },\n        computed:{\n            isMobile : function () {\n                return window.matchMedia('(max-width: 767px)').matches\n            }\n        },\n        mounted(){\n            window.addEventListener('resize',()=>{\n                if(!this.isMobile) {\n                    this.initMouse();\n                }\n            });\n            if(!this.isMobile) {\n                this.initMouse();\n            }\n        },\n        methods:{\n            blindListener:function () {\n                window.addEventListener(\"mouseover\", (e)=>{\n                    e = e || window.event;\n                    if(e.target.classList.contains('interactive-l')){\n                        this.hoveringObject = e.target;\n                        this.isHover = true;\n                        this.isLargeTarget = true;\n                    } else if(e.target.classList.contains('interactive-s')){\n                        this.hoveringObject = e.target;\n                        this.isHover = true;\n                        this.isLargeTarget = false;\n                    }\n                });\n                window.addEventListener(\"mouseout\", (e)=>{\n                    e = e || window.event;\n                    if(e.target.classList.contains('interactive-l')){\n                        this.hoveringObject = null;\n                        this.isHover = false;\n                        this.isLargeTarget = false;\n                    } else if(e.target.classList.contains('interactive-s')){\n                        this.hoveringObject = null;\n                        this.isHover = false;\n                        this.isLargeTarget = false;\n                    }\n                });\n                window.addEventListener(\"click\", (e)=>{\n                    e = e || window.event;\n                    if(e.target.classList.contains('interactive-l')){\n                        this.isHover = false;\n                        this.isLargeTarget = false;\n                    } else if(e.target.classList.contains('interactive-s')){\n                        this.isHover = false;\n                        this.isLargeTarget = false;\n                    }\n                })\n            },\n            initMouse:function () {\n                if(this.p5) return;\n                // eslint-disable-next-line no-prototype-builtins\n                const sketch = s =>{\n                    let largeCursorSize = 16*2;\n                    let smallCursorSize = 16;\n                    let mouse = {\n                        x:0,\n                        y:0,\n                        tSize:16,\n                    };\n                    let radius = 16;\n                    let rotAngle = -90;\n                    let accelX = 0.0;\n                    let accelY = 0.0;\n                    let deltaX = 0.0;\n                    let deltaY = 0.0;\n                    let springing = 0.01;\n                    let damping = 0.8;\n\n                    //corner nodes\n                    let nodes = 64;\n\n                    //zero fill arrays\n                    let nodeStartX = [];\n                    let nodeStartY = [];\n                    let nodeX = [];\n                    let nodeY = [];\n                    let angle = [];\n                    let frequency = [];\n                    // soft-body dynamics\n                    let organicConstant = 1.0;\n                    for (let i = 0; i < nodes; i++) {\n                        //initialize arrays to 0\n                        nodeStartX[i] = 0;\n                        nodeStartY[i] = 0;\n                        nodeX[i] = 0;\n                        nodeY[i] = 0;\n                        angle[i] = 0;\n                    }\n                    // initialize frequencies for corner nodes\n                    for (let i = 0; i < nodes; i++) {\n                        frequency[i] = s.random(2, 5);\n                    }\n\n                    s.setup=()=> {\n                        s.createCanvas(s.windowWidth,s.windowHeight);\n                        s.rectMode(s.CENTER);\n                        s.noStroke();\n                        mouse.x = s.mouseX;\n                        mouse.y = s.mouseY;\n                    };\n                    s.draw=()=> {\n                        s.clear();\n\n                        if(this.isHover){\n                            if(!this.isLargeTarget){\n                                gsap.to(mouse,0.8,{\n                                    x: this.hoveringObject.getBoundingClientRect().x + this.hoveringObject.offsetWidth / 2\n                                });\n                                gsap.to(mouse,0.8,{\n                                    y: this.hoveringObject.getBoundingClientRect().y + this.hoveringObject.offsetHeight / 2\n                                });\n                            }else{\n                                gsap.to(mouse,0.8,{\n                                    x: s.mouseX\n                                });\n                                gsap.to(mouse,0.8,{\n                                    y: s.mouseY\n                                });\n                            }\n                            gsap.to(mouse,0.8,{\n                                tSize: largeCursorSize\n                            })\n                            s.stroke(255);\n                            s.noFill();\n                            deltaX = s.mouseX - mouse.x;\n                            deltaY = s.mouseY - mouse.y;\n\n                        }else {\n                            gsap.to(mouse,0.8,{\n                                tSize: smallCursorSize\n                            });\n                            gsap.to(mouse,0.8,{\n                                x: s.mouseX\n                            });\n                            gsap.to(mouse,0.8,{\n                                y: s.mouseY\n                            });\n                            s.fill(255);\n                            s.noStroke();\n                            deltaX = s.mouseX - mouse.x;\n                            deltaY = s.mouseY - mouse.y;\n                        }\n                        radius += (mouse.tSize - radius) * damping;\n\n                        for (let i = 0; i < nodes; i++) {\n                            nodeStartX[i] = mouse.x + s.cos(s.radians(rotAngle)) * radius;\n                            nodeStartY[i] = mouse.y + s.sin(s.radians(rotAngle)) * radius;\n                            rotAngle += 360.0 / nodes;\n                        }\n                        // draw polygon\n                        s.curveTightness(organicConstant);\n\n                        s.beginShape();\n                        for (let i = 0; i < nodes; i++) {\n                            s.curveVertex(nodeX[i], nodeY[i]);\n                        }\n                        for (let i = 0; i < nodes - 1; i++) {\n                            s.curveVertex(nodeX[i], nodeY[i]);\n                        }\n                        s.endShape(s.CLOSE);\n\n\n\n                        // create springing effect\n                        deltaX *= springing;\n                        deltaY *= springing;\n                        accelX += deltaX;\n                        accelY += deltaY;\n\n                        // // move predator's center\n                        // mouse.x += accelX;\n                        // mouse.y += accelY;\n\n                        // slow down springing\n                        accelX *= damping;\n                        accelY *= damping;\n\n                        // change curve tightness\n                        organicConstant = 1 - ((s.abs(accelX) + s.abs(accelY)) * 0.1);\n\n                        //move nodes\n                        for (let i = 0; i < nodes; i++) {\n                            nodeX[i] = nodeStartX[i] + s.sin(s.radians(angle[i])) * (accelX * 2);\n                            nodeY[i] = nodeStartY[i] + s.sin(s.radians(angle[i])) * (accelY * 2);\n                            angle[i] += frequency[i];\n                        }\n                    };\n                    s.windowResized=()=>{\n                        s.resizeCanvas(s.windowWidth, s.windowHeight);\n                    }\n                };\n                this.p5 = new P5(sketch, 'cursor-mask');\n                this.blindListener();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #cursor-mask {\n        width: 100vw;\n        height: 100%;\n        position: fixed;\n        left: 0;\n        top: 0;\n        pointer-events: none;\n        z-index: 98;\n        mix-blend-mode:difference\n    }\n    #cursor-mask #cursor {\n        will-change: transform, width, height;\n        width: 0;\n        height: 0;\n        border-radius: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        pointer-events: none;\n        background-color: rgba(255,255,255,0.2);\n    }\n    #cursor-mask #cursor img {\n        width: 0;\n        height: 0;\n        position: relative;\n        transform: translate(-50%,-50%);\n        left: 50%;\n        top: 50%;\n        opacity: 0;\n        transition: 0.3s;\n    }\n\n    #cursor.hover {\n        opacity: 1;\n    }\n\n    #cursor.hover-large img{\n        width: 4rem;\n        height: 4rem;\n        opacity: 0.9;\n    }\n</style>"],"sourceRoot":"src/components"}]}